SET(CUPS_CONFIG_NAME "cups-config")
MARK_AS_ADVANCED(CUPS_CONFIG_NAME)

FIND_PROGRAM(CUPS_CONFIG_PATH "${CUPS_CONFIG_NAME}")
MARK_AS_ADVANCED(CUPS_CONFIG_PATH)

IF(CUPS_CONFIG_PATH STREQUAL "CUPS_CONFIG_PATH-NOTFOUND")
	MESSAGE(FATAL_ERROR "${CUPS_CONFIG_NAME}: command not found")
ENDIF()

FUNCTION(CUPS_CONFIG OPTS VAR)
	EXECUTE_PROCESS(COMMAND ${CUPS_CONFIG_PATH} ${OPTS}
	RESULT_VARIABLE
		RET
	OUTPUT_VARIABLE
		OUT
	OUTPUT_STRIP_TRAILING_WHITESPACE
	)

	IF (RET)
		MESSAGE(FATAL_ERROR "\"${CUPS_CONFIG_PATH} ${OPTS}\" failed")
	ENDIF()

	SET(${VAR} "${OUT}" PARENT_SCOPE)
ENDFUNCTION()

CUPS_CONFIG("--api-version"  CUPS_API_BUILD)
CUPS_CONFIG("--build"        CUPS_BUILD)
CUPS_CONFIG("--cflags"       CUPS_CFLAGS)
CUPS_CONFIG("--datadir"      CUPS_DATADIR)
CUPS_CONFIG("--ldflags"      CUPS_LDFLAGS)
CUPS_CONFIG("--serverbin"    CUPS_SERVERBIN)
CUPS_CONFIG("--serverroot"   CUPS_SERVERROOT)
CUPS_CONFIG("--version"      CUPS_VERSION)
CUPS_CONFIG("--libs"         CUPS_LIBS)
CUPS_CONFIG("--image;--libs" CUPS_IMAGE_LIBS)

MESSAGE(STATUS "Found CUPS: ${CUPS_BUILD} (found API version \"${CUPS_API_BUILD}\")")
